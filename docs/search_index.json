[["index.html", "Loss Data Analytics: Short Course Development Strategy Overview", " Loss Data Analytics: Short Course Development Strategy Short courses to be authored by the Actuarial Community Overview Date: 07 September 2021 This site outlines a strategy to develop short courses based on a foundation of non-life insurance that we call loss data analytics. Part 1 summarizes the short course proposal that outlines the development strategy. Part 2 provides instructions for contributors. The goal is to promote consistency among chapters and, later on, courses, this section describes a number of best practices. These are guidelines to be observed, not strict rules. Part 3 provides a general call for volunteers as well as thoughts on strategies we might adopt to develop our short course model. Supporting Sites The open and free Loss Data Analytics textbook. A Regression Modeling Online Tutorial that we mimic (and later, will improve upon). Work on the development of the first course has already begun. See the latest draft of our Loss Data Analytics Short Course. Github repositories contain the source files for these materials. "],["C-Proposal.html", "Part 1 Proposal", " Part 1 Proposal This is a proposal for a course to be formed under the auspices of the Astin Academy. The proposal has been approved for adoption by the Astin Board. A call for volunteers has gone out. Course: An asynchronous experience that covers the fundamentals of loss data modeling. The course will provide an interactive learning experience through online video explanations, quizzes, and software (R) demonstrations to sharpen student understanding. It may be also used by an in-person instructor who employs a hybrid teaching model that combines this resource with an in-person experience. The Audience: Beginning actuarial students who may not have had an exposure to industry practice. The course assumes that participants have a background in loss data modeling, presumably through reading the book Loss Data Analytics. The Method of Delivery. A web based course hosted on a free server such as Github. The course will include links to videos (that would be hosted on another free server such as Kaltura), and interactive R tutorials, powered by a free server such as Datacamp. The course places a premium on inter-activity - the cost for this is that it presumes ready access to the internet. (Note that in jurisdictions without steady internet access, the book Loss Data Analytics can be downloaded as a .pdf file.) The Price for Course Participants. Zero. This foundation course is geared to aid the development of future generations of actuaries on a worldwide basis. Course Design. The design mimics one developed for a regression course that can complement/substitute for in-person teaching. This online course is authored in R (specifically, using a package called bookdown), has many interactive features using html/javascript, links to videos located at a free site (Kaltura), and interactive scripts using an R package called Datacamp Lite (written and powered by Datacamp). The course itself is hosted on a free Github site. Instead of regression, the new proposed course will be based on loss data modeling. As background, students can rely on the freely available book Loss Data Analytics. This book is written by an international author team and follows IAA guidelines on topics. Specifically, the initial version of the proposed course will cover the first five chapters of Loss Data Analytics. For each section of each chapter, there will be a video overview (generally 3-8 minutes long), overheads and scripts for viewing/reviewing the video, a quiz, and ** one or more interactive R tutorials. Including a start and wrap-up of the course, there will be approximately 26 video segments (=1+3+7+5+4+5+1, 1 to start, 3 for chapter 1, 7 for chapter 2, and so on). After having read the book, participants would be able to complete the course in about a day. As an added bonus, we might include industry case studies as additional segments. Strategy for Content Development. The team would be directed by a steering committee, presumably about 3-5 people. Co-chair Miyuki Ebisaki will serve as liaison to the ASTIN council. The steering committee would be responsible for the overall content of the course (the syllabus), attracting appropriate volunteers, managing the progress, and marketing. Members of the steering committee will do the beginning and wrap-up videos. To develop the content, for each chapter we will organize a content team. Specifically, we would need one person responsible for videos, one for the design of the interactive R questions, and one to engineer the feedback mechanism for the R questions (a time consuming task). All chapter members could contribute to the quizzes. If there are five chapters, this represents 15 (=3 x 5) volunteer positions. Presumably, some volunteers would be up for doing more than one chapter. Additional volunteers that would be nice but not essential: An expert in R who knows the details of package development/deployment and interactions with html/javascript An expert in html/javascript who could help with the integration of RStudio/bookdown An expert in creating videos (including closed-captioning) and how to host them An expert in git/Github who could guide us in collaborative development After the initial version is complete, we will discuss extensions to include other chapters. Timeline. As this is a pilot project, quality is more important than speed. This course covers the foundations that do not change all that quickly, so we want a product that can serve the profession on a long-term basis. To promote sustainability, we want a quality product that our customers, the students, enjoy and find useful. If this is to be a model that the Astin Academy uses as a basis for other courses, we want to get young colleagues involved and have them take ownership. All of these aspects point to taking time. Having said that, the design is straightforward and already accomplished in the regression course mentioned above. So, an approximate completion date is six months after the volunteers have been recruited, presumably sometime during the summer of 2021. Interested? If you are interested in participating, please write the co-chairs of the Astin Academy: Edward W. (Jed) Frees jfrees@bus.wisc.edu Miyuki Ebisaki mebisaki.astin@gmail.com "],["C-Instructions.html", "Part 2 Instructions for Contributors 2.1 Video Contributors 2.2 Tutorial Problem Contributors 2.3 Submission Correction Tests Contributors 2.4 Using the Short Course", " Part 2 Instructions for Contributors 2.1 Video Contributors Each chapter will have 3-8 sections, roughly corresponding to the book. Goal. The purpose of the video is to provide an interactive experience, where learners can review the main ideas of the book. Learning Objectives Start each section with a set of 3 or 4 learning objectives. For each section, the video will reinforce the learning objectives. It is okay to use the learning objectives from the text. Then, the video will provide exactly the information needed for the learner to complete the interactive exercises. Background of Viewers. You can assume that the viewer will have read the text. However, just as students in your classes, they will probably have forgotten the substance. So, big points need to be reinforced. Relationship with Tutorials As part of the purpose of the video is to provide background for the tutorials, there will need to be close co-ordination between the two. Sometimes a video can provide a complicated analysis of a data set and then the tutorial can ask the learner to go through essentially the same analysis albeit with modifications. Many of the overheads will provide a combination of code and output from the code. Explain this to the viewer in a way that he or she can reproduce it in a related situation. Video Overheads Use whatever system you like (e.g., latex/beamer, Powerpoint) to produce the video overheads in .pdf format. If you are indifferent, try R markdown (that uses latex/Beamer), as in the Chapter 1 Example. As this integrates well with our online delivery software (R markdown/Bookdown), this will probably become the standard later on as we develop protocols to replicate our work for other courses. Video Production Use whatever recording system that you like. If you do not have experience in this, one easily accessible avenue is to use Zooms ability to record. This is how the Frees examples in Chapter 1 were done. Everyone does this differently, but one approach is to write out the scripts of what you want to say prior to the recording. Here are some examples for Chapter 1 of the first course. This means it takes longer to produce the first draft but is more time efficient for those of us who require multiple drafts to get a good quality video. Think of about 1000 words for an 8 minute video. A bonus of writing the scripts in advance is that they are helpful when adding closed-captioning to the videos (really useful for international audiences). Here is the system that we used to add closed captions to the videos: Go to Youtube, open an account (that is free), and upload the video. After a bit of time (needed to process the video), you can go to the subtitles part and add captions. Upload the script (as a text file) without timings. Then, Youtube will sync up your file with the video and add timings to it. Wait a bit. Ten minutes seemed to work well (although the system warns you it may require more time). Then, you can download the closed-caption file using one of three formats. We use the .srt extension because this is what the hosting site (Kaltura) uses. Despite the extension, these are all just text files and so it is simple to edit if you find errors you wish to fix. Then, we simply uploaded the video file (often .mpeg) and the closed-caption file to the hosting site. Done. You can delete the work from Youtube, if you wish. 2.2 Tutorial Problem Contributors For each section, the goal is to have one or two tutorial exercises that will reinforce learning objectives of the section. Assignment Text. Start with a set of background information known as the assignment text. This is relatively brief. For example, Datacamp recommends 540 characters with a target range of 30 to 780 characters. Instructions. Next comes a set of instructions, typically written in a bullet fashion where each bullet corresponds to a part. The target is for three parts but this may range from 1 to 4 For each part, the ideal is 360 characters with a target range of 30 to 480 characters. Hints may also be provided. Again they should be short (about 270 characters) and there may be from 0 to 4 hints per exercise. Solution Code. Provide the R code that solves the problem described in the assignment text and instructions. Sample Code. Copy the solution code and remove selected variables and function names that you think users would learn from filling in. Consider a range of 8-12 lines of code but feel free to deviate to accomplish learning objectives. Success Messages. Give one to three lines providing encouragement for users and summarizing what they have learned in this exercise. Here is a description of what these elements look like when coded in R. For most contributors, it is likely that it will be easiest to work with our TutorialTemplate.Rmd that you can get when you download the whole site (in the References folder), or directly from here. 2.2.1 Datacamp Light Tutorial problem contributors do not need to get into the online tutorial system. Just simply provide the problem set-up (assignment and instructions) and the R-code solutions and sample code, with hints and success messages as added plusses. The main thing to understand is that the system takes the R code, shoots it to a server someplace that executes the code, and sends results back to the user. Although this is very cool (e.g., R need not be installed on the users machine), an implication is that not all the packages that we want are installed on this server. Sadly, Datacamp has not upgraded this service in the last 2-3 years, so we have to be careful in the choice of packages we use. Here is a list of packages readily available. If you use a package that you have not seen before in the tutorial, please check it prior to providing R code. One exception: for this course, we will use a lot of functions from the actuar() package and so intend to make them available individually (by putting the source code on Github). Not too clean but it works. Moreover, if you would like to learn more, see the following. Datacamp Light URLs. Datacamp has created a javascript app called Datacamp Light that allows for an interactive learning platform in an html environment. In this general app, you do not need to work in an R environment but, since we are doing so, life is easier. See https://github.com/datacamp/datacamp-light. Tutorial problem contributors can start with the R tutorial package that one can install, for example, in R markdown. In the package documentation, you can see that one can also code up Python exercises with tutorial. With R markdown, we are producing html output. The tutorial package generates some javascript syntax needed from our problems, so we will not need the general Datacamp Light app. However, as we are all interested in learning, it may be that the source code will be of interest. Users ultimately want to see a correct solution. If the learner does not get the correct solution, then the Section 2.3 submission correction tests provides guidance on correcting the source of the mistakes. 2.2.2 Data Many tutorial problems will involve interesting data. You might start with the data in the Loss Data Analytics book as many students will be familiar with them from their reading. Download Property Fund Data as a .csv file Download Resampling Data as a .csv file Download Claim level Property Fund Data as a .csv file (Right click, then save page as a text or .csv file) For other datasets, there are a few in the Regression Modeling with Actuarial and Financial Applications book. In particular, the R package CASdatasets has many good choices; this package is based on the book Computational Actuarial Science with R. 2.3 Submission Correction Tests Contributors These are fairly specialized part of the tutorial system; so, our strategy is to have one or two volunteers that will focus on this aspect. They provide guidance to users on how to correct commonly occurring mistakes. They are a super helpful part of so-called intelligent tutoring systems but may take us awhile to implement properly. Like the app Datacamp Light, Datacamp has created an app called testwhat for providing feedback on the R version of Datacamp Light (another app called pythonwhat is for Python code. Other apps are also available for SQL, Shell, and Spreadsheets.). Our users submit their code to Datacamp servers and so there is nothing for us to install. The Submission Correction Tests (SCTs) provides us an opportunity to give individualized feedback to help students learn from their mistakes. The basics of the syntax are available from the testwhat site. Go through each of the tabs (Syntax, Glossary, Guides, and so on). Our challenge will be to anticipate the main types of mistakes that students might make and provide code to help them along. Here are some additional sources that may be helpful: We have an overview that was written by a Wisconsin student. Given the new version of the testwhat site, it is not as important now. Still, nice to get a students perspective. See the examples for the Regression Modeling Short Course. For example, for Exercise 1.1.1, take a look at the sample R code (search on ex=\"ExerRegMod1.1.2\"). Alternatively (or in addition), here are articles from Datacamp that you might want to check out: Overview of SCTs Deep Dive Best Practices 2.4 Using the Short Course We hope that you (and anyone else) will be interested in taking the foundations of the short course and modifying it to suit your own needs. To make this happen, here are two potentially important pieces: 2.4.1 Download and Edit a Local Copy of the Course Optional - Get reasonably recent versions of R and Rstudio. Sometimes, there can be conflicts if you are running very old versions these products. (Probably best to do this step at a later stage in case you run into problems that you cant debug.) Optional - Update packages. We have discovered conflicts between some of the advanced graphics/RGL and javascript in chapter 3 with old versions of some packages. Surprisingly, the one exception is the package bookdown. We found that an old version (0.21) works best. So, use this code: require(devtools) install_version(bookdown, version = 0.21, repos = http://cran.us.r-project.org) Download a copy of the book. Go to Github, https://github.com/OpenActTextDev/LifeCon, hit the green Code button, download a .zip file and uncompress it. Open R-studio, go to File==&gt;Open Project. From the folder you just downloaded and uncompressed, select LifeCon.Rproj. In R studio, open the file PackagesLifeCon.Rmd (but do not knit it). These are the packages that will be called when you compile the book, so install them now if needed. In R-studio, go to the upper right tab, hit Build. This brings up a Build Book tab. Click the down arrow to the right and select bookdown::gitbook. This starts the compile process. Upon successful compile, you should see a preview of the book. If it gets lost, go to the docs subfolder and open index.html in a browser, hopefully you see the compiled book. As you edit the book, go to the file \"_bookdown.yml\". This allows you to select the .Rmd files (and the order) that you wish to appear in the book. 2.4.2 Upload your Course Version to Github Start by getting a (free) Github account. We are going to follow the process documented at https://happygitwithr.com/existing-github-first.html, so you might want to look over this excellent resource before beginning. 16.1 Make a repo on GitHub Go to https://github.com and make sure you are logged in. Click the green New repository button. Or, if you are on your own profile page, click on Repositories, then click the green New button. Pick a repository name that actually reminds you what the project is about! But try to be concise. Public = YES Initialize this repository with a README Click the big green button Create repository. Copy the HTTPS clone URL to your clipboard via the green Clone or Download button. In R-studio, open a new project. File==&gt;New Project==&gt;Version Control==&gt;Git. In the repository URL paste the URL of your new GitHub repository. It will be something like this https://github.com/jennybc/myrepo.git. Close R studio and copy the existing project onto the one you just created. Open R studio with the newly created project. I have had a little trouble getting the first commit done on my machine. So, I have to do it by hand: Tools==&gt;Shell git status rm -f .git/index.lock git add . all (The rm command is from: https://stackoverflow.com/questions/38004148/another-git-process-seems-to-be-running-in-this-repository) Now, we can leave the shell Git tab ==&gt; Commit ==&gt;Provide a short descriptive name Then hit the push (up arrow) Hopefully everything goes up to Github. Finally to get the world to see your page: Settings ==&gt; GitHub pages ==&gt;Check it out here! ==&gt; Source Change None to main. Change /root to /docs . Then save. May need to wait a couple minutes. Then, you can view your new book at, for example, https://ewfreesres.github.io/TestActMatch/ "],["C-VolunteerCall.html", "Part 3 A Call for Volunteers", " Part 3 A Call for Volunteers The proposal and plan to date is based on a developed book Loss Data Analytics as well as a template for a comparable online tutorial on regression that has worked well so far. However, as we gain access to more creative and dedicated volunteers, we are hopeful to improve our design for short course offerings. Alternative Course Designs As we develop our principles of formulating effective short courses, it will be helpful to benchmark against alternative course designs and ideas. Here is a list of a few; expect to see this list grow. Elementary Statistics with R Regression Methods Intelligent Tutoring System Our discussion of Open Educational Resources Use of R as a Tool for Interactive Books and Short Courses There are many great tools that have been developed to author books (e.g., Word, latex) and interactive short courses (e.g., Wordpress). However, we are using R as a tool for writing (books and webpages) through its markdown capabilities, including the package bookdown. Further, we are using the R package tutorial from the Datacamp Lite suite for our interactive problems. The use of R is well known to the actuarial community - we hope that promoting its application for authoring our books and short courses will help in recruiting a broad and sustainable group of authors and other volunteers from the actuarial community. Discussion Forum We are hoping to promote discussion among users of the course, one option we are exploring is the resource Disqus. More broadly, an alternative/complementary idea is to include an Ask a Mentor button to each chapter section. This would require volunteers to help implement proper design and functionality for this Reader Seeking Guidance feature to optimally benefit those who do not have an access to a professor or someone else familiar with the subject content. Volunteers serving content mentors would respond to reader questions and use the questions to improve/transform the content structure, including examples presented to next level or as supplement sections. Please enable JavaScript to view the comments powered by Disqus. Audio Book and Podcast Options There is also interest in adding audio book and podcast options to the course. To make this happen, we seek volunteers to help implement proper design and functionality for the audio feature to optimally benefit visual and reading-skill challenged audiences. Interactive Features An online short course can be distinguished from a textbook based on the quantity and quality of interactive features offered. This repository describes the interactive features being contemplated in the context of Loss Data Analytics. We seek creative volunteers who wish to explore adoption of tools that allows the user to interact with our content. "]]
